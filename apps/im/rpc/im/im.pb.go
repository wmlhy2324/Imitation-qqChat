// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.19.4
// source: im.proto

package im

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatLog struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	ConversationId string                 `protobuf:"bytes,2,opt,name=conversationId,proto3" json:"conversationId"`
	SendId         string                 `protobuf:"bytes,3,opt,name=sendId,proto3" json:"sendId"`
	RecvId         string                 `protobuf:"bytes,4,opt,name=recvId,proto3" json:"recvId"`
	MsgType        int32                  `protobuf:"varint,5,opt,name=msgType,proto3" json:"msgType"`
	MsgContent     string                 `protobuf:"bytes,6,opt,name=msgContent,proto3" json:"msgContent"`
	ChatType       int32                  `protobuf:"varint,7,opt,name=chatType,proto3" json:"chatType"`
	SendTime       int64                  `protobuf:"varint,8,opt,name=SendTime,proto3" json:"SendTime"`
	ReadRecords    []byte                 `protobuf:"bytes,9,opt,name=readRecords,proto3" json:"readRecords"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ChatLog) Reset() {
	*x = ChatLog{}
	mi := &file_im_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatLog) ProtoMessage() {}

func (x *ChatLog) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatLog.ProtoReflect.Descriptor instead.
func (*ChatLog) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{0}
}

func (x *ChatLog) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatLog) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *ChatLog) GetSendId() string {
	if x != nil {
		return x.SendId
	}
	return ""
}

func (x *ChatLog) GetRecvId() string {
	if x != nil {
		return x.RecvId
	}
	return ""
}

func (x *ChatLog) GetMsgType() int32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *ChatLog) GetMsgContent() string {
	if x != nil {
		return x.MsgContent
	}
	return ""
}

func (x *ChatLog) GetChatType() int32 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

func (x *ChatLog) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *ChatLog) GetReadRecords() []byte {
	if x != nil {
		return x.ReadRecords
	}
	return nil
}

type Conversation struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId string                 `protobuf:"bytes,1,opt,name=conversationId,proto3" json:"conversationId"`
	ChatType       int32                  `protobuf:"varint,2,opt,name=chatType,proto3" json:"chatType"`
	TargetId       string                 `protobuf:"bytes,3,opt,name=targetId,proto3" json:"targetId"`
	IsShow         bool                   `protobuf:"varint,4,opt,name=isShow,proto3" json:"isShow"`
	Seq            int64                  `protobuf:"varint,5,opt,name=seq,proto3" json:"seq"`
	// 总消息数
	Total int32 `protobuf:"varint,6,opt,name=total,proto3" json:"total"`
	// 未读消息数
	ToRead int32    `protobuf:"varint,7,opt,name=toRead,proto3" json:"toRead"`
	Msg    *ChatLog `protobuf:"bytes,8,opt,name=msg,proto3" json:"msg"`
	// 已读消息
	Read int32 `protobuf:"varint,9,opt,name=Read,proto3" json:"Read"`
	// 扩展字段 - 用于前端显示
	Name          string `protobuf:"bytes,10,opt,name=name,proto3" json:"name"`                // 会话名称（好友昵称或群名称）
	Avatar        string `protobuf:"bytes,11,opt,name=avatar,proto3" json:"avatar"`            // 会话头像（好友头像或群头像）
	MemberCount   int32  `protobuf:"varint,12,opt,name=memberCount,proto3" json:"memberCount"` // 群成员数量（仅群聊时有效）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	mi := &file_im_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{1}
}

func (x *Conversation) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *Conversation) GetChatType() int32 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

func (x *Conversation) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *Conversation) GetIsShow() bool {
	if x != nil {
		return x.IsShow
	}
	return false
}

func (x *Conversation) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *Conversation) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Conversation) GetToRead() int32 {
	if x != nil {
		return x.ToRead
	}
	return 0
}

func (x *Conversation) GetMsg() *ChatLog {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *Conversation) GetRead() int32 {
	if x != nil {
		return x.Read
	}
	return 0
}

func (x *Conversation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Conversation) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Conversation) GetMemberCount() int32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

type GetConversationsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationsReq) Reset() {
	*x = GetConversationsReq{}
	mi := &file_im_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationsReq) ProtoMessage() {}

func (x *GetConversationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationsReq.ProtoReflect.Descriptor instead.
func (*GetConversationsReq) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{2}
}

func (x *GetConversationsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetConversationsResp struct {
	state            protoimpl.MessageState   `protogen:"open.v1"`
	ConversationList map[string]*Conversation `protobuf:"bytes,2,rep,name=conversationList,proto3" json:"conversationList" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetConversationsResp) Reset() {
	*x = GetConversationsResp{}
	mi := &file_im_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationsResp) ProtoMessage() {}

func (x *GetConversationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationsResp.ProtoReflect.Descriptor instead.
func (*GetConversationsResp) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{3}
}

func (x *GetConversationsResp) GetConversationList() map[string]*Conversation {
	if x != nil {
		return x.ConversationList
	}
	return nil
}

type PutConversationsReq struct {
	state            protoimpl.MessageState   `protogen:"open.v1"`
	Id               string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	UserId           string                   `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId"`
	ConversationList map[string]*Conversation `protobuf:"bytes,3,rep,name=conversationList,proto3" json:"conversationList" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PutConversationsReq) Reset() {
	*x = PutConversationsReq{}
	mi := &file_im_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutConversationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutConversationsReq) ProtoMessage() {}

func (x *PutConversationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutConversationsReq.ProtoReflect.Descriptor instead.
func (*PutConversationsReq) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{4}
}

func (x *PutConversationsReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PutConversationsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PutConversationsReq) GetConversationList() map[string]*Conversation {
	if x != nil {
		return x.ConversationList
	}
	return nil
}

type PutConversationsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutConversationsResp) Reset() {
	*x = PutConversationsResp{}
	mi := &file_im_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutConversationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutConversationsResp) ProtoMessage() {}

func (x *PutConversationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutConversationsResp.ProtoReflect.Descriptor instead.
func (*PutConversationsResp) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{5}
}

type GetChatLogReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId string                 `protobuf:"bytes,1,opt,name=conversationId,proto3" json:"conversationId"`
	StartSendTime  int64                  `protobuf:"varint,2,opt,name=startSendTime,proto3" json:"startSendTime"`
	EndSendTime    int64                  `protobuf:"varint,3,opt,name=endSendTime,proto3" json:"endSendTime"`
	Count          int64                  `protobuf:"varint,4,opt,name=count,proto3" json:"count"`
	MsgId          string                 `protobuf:"bytes,5,opt,name=msgId,proto3" json:"msgId"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetChatLogReq) Reset() {
	*x = GetChatLogReq{}
	mi := &file_im_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChatLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatLogReq) ProtoMessage() {}

func (x *GetChatLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatLogReq.ProtoReflect.Descriptor instead.
func (*GetChatLogReq) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{6}
}

func (x *GetChatLogReq) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *GetChatLogReq) GetStartSendTime() int64 {
	if x != nil {
		return x.StartSendTime
	}
	return 0
}

func (x *GetChatLogReq) GetEndSendTime() int64 {
	if x != nil {
		return x.EndSendTime
	}
	return 0
}

func (x *GetChatLogReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetChatLogReq) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

type GetChatLogResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*ChatLog             `protobuf:"bytes,1,rep,name=List,proto3" json:"List"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChatLogResp) Reset() {
	*x = GetChatLogResp{}
	mi := &file_im_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChatLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatLogResp) ProtoMessage() {}

func (x *GetChatLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatLogResp.ProtoReflect.Descriptor instead.
func (*GetChatLogResp) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{7}
}

func (x *GetChatLogResp) GetList() []*ChatLog {
	if x != nil {
		return x.List
	}
	return nil
}

type SetUpUserConversationReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SendId        string                 `protobuf:"bytes,1,opt,name=SendId,proto3" json:"SendId"`
	RecvId        string                 `protobuf:"bytes,2,opt,name=recvId,proto3" json:"recvId"`
	ChatType      int32                  `protobuf:"varint,3,opt,name=chatType,proto3" json:"chatType"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetUpUserConversationReq) Reset() {
	*x = SetUpUserConversationReq{}
	mi := &file_im_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetUpUserConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUpUserConversationReq) ProtoMessage() {}

func (x *SetUpUserConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUpUserConversationReq.ProtoReflect.Descriptor instead.
func (*SetUpUserConversationReq) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{8}
}

func (x *SetUpUserConversationReq) GetSendId() string {
	if x != nil {
		return x.SendId
	}
	return ""
}

func (x *SetUpUserConversationReq) GetRecvId() string {
	if x != nil {
		return x.RecvId
	}
	return ""
}

func (x *SetUpUserConversationReq) GetChatType() int32 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

type SetUpUserConversationResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetUpUserConversationResp) Reset() {
	*x = SetUpUserConversationResp{}
	mi := &file_im_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetUpUserConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUpUserConversationResp) ProtoMessage() {}

func (x *SetUpUserConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUpUserConversationResp.ProtoReflect.Descriptor instead.
func (*SetUpUserConversationResp) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{9}
}

type CreateGroupConversationReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=GroupId,proto3" json:"GroupId"`
	CreateId      string                 `protobuf:"bytes,2,opt,name=CreateId,proto3" json:"CreateId"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupConversationReq) Reset() {
	*x = CreateGroupConversationReq{}
	mi := &file_im_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupConversationReq) ProtoMessage() {}

func (x *CreateGroupConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupConversationReq.ProtoReflect.Descriptor instead.
func (*CreateGroupConversationReq) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{10}
}

func (x *CreateGroupConversationReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CreateGroupConversationReq) GetCreateId() string {
	if x != nil {
		return x.CreateId
	}
	return ""
}

type CreateGroupConversationResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupConversationResp) Reset() {
	*x = CreateGroupConversationResp{}
	mi := &file_im_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupConversationResp) ProtoMessage() {}

func (x *CreateGroupConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupConversationResp.ProtoReflect.Descriptor instead.
func (*CreateGroupConversationResp) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{11}
}

var File_im_proto protoreflect.FileDescriptor

const file_im_proto_rawDesc = "" +
	"\n" +
	"\bim.proto\x12\x02im\"\x85\x02\n" +
	"\aChatLog\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12&\n" +
	"\x0econversationId\x18\x02 \x01(\tR\x0econversationId\x12\x16\n" +
	"\x06sendId\x18\x03 \x01(\tR\x06sendId\x12\x16\n" +
	"\x06recvId\x18\x04 \x01(\tR\x06recvId\x12\x18\n" +
	"\amsgType\x18\x05 \x01(\x05R\amsgType\x12\x1e\n" +
	"\n" +
	"msgContent\x18\x06 \x01(\tR\n" +
	"msgContent\x12\x1a\n" +
	"\bchatType\x18\a \x01(\x05R\bchatType\x12\x1a\n" +
	"\bSendTime\x18\b \x01(\x03R\bSendTime\x12 \n" +
	"\vreadRecords\x18\t \x01(\fR\vreadRecords\"\xc7\x02\n" +
	"\fConversation\x12&\n" +
	"\x0econversationId\x18\x01 \x01(\tR\x0econversationId\x12\x1a\n" +
	"\bchatType\x18\x02 \x01(\x05R\bchatType\x12\x1a\n" +
	"\btargetId\x18\x03 \x01(\tR\btargetId\x12\x16\n" +
	"\x06isShow\x18\x04 \x01(\bR\x06isShow\x12\x10\n" +
	"\x03seq\x18\x05 \x01(\x03R\x03seq\x12\x14\n" +
	"\x05total\x18\x06 \x01(\x05R\x05total\x12\x16\n" +
	"\x06toRead\x18\a \x01(\x05R\x06toRead\x12\x1d\n" +
	"\x03msg\x18\b \x01(\v2\v.im.ChatLogR\x03msg\x12\x12\n" +
	"\x04Read\x18\t \x01(\x05R\x04Read\x12\x12\n" +
	"\x04name\x18\n" +
	" \x01(\tR\x04name\x12\x16\n" +
	"\x06avatar\x18\v \x01(\tR\x06avatar\x12 \n" +
	"\vmemberCount\x18\f \x01(\x05R\vmemberCount\"-\n" +
	"\x13GetConversationsReq\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\"\xc9\x01\n" +
	"\x14GetConversationsResp\x12Z\n" +
	"\x10conversationList\x18\x02 \x03(\v2..im.GetConversationsResp.ConversationListEntryR\x10conversationList\x1aU\n" +
	"\x15ConversationListEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12&\n" +
	"\x05value\x18\x02 \x01(\v2\x10.im.ConversationR\x05value:\x028\x01\"\xef\x01\n" +
	"\x13PutConversationsReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\tR\x06userId\x12Y\n" +
	"\x10conversationList\x18\x03 \x03(\v2-.im.PutConversationsReq.ConversationListEntryR\x10conversationList\x1aU\n" +
	"\x15ConversationListEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12&\n" +
	"\x05value\x18\x02 \x01(\v2\x10.im.ConversationR\x05value:\x028\x01\"\x16\n" +
	"\x14PutConversationsResp\"\xab\x01\n" +
	"\rGetChatLogReq\x12&\n" +
	"\x0econversationId\x18\x01 \x01(\tR\x0econversationId\x12$\n" +
	"\rstartSendTime\x18\x02 \x01(\x03R\rstartSendTime\x12 \n" +
	"\vendSendTime\x18\x03 \x01(\x03R\vendSendTime\x12\x14\n" +
	"\x05count\x18\x04 \x01(\x03R\x05count\x12\x14\n" +
	"\x05msgId\x18\x05 \x01(\tR\x05msgId\"1\n" +
	"\x0eGetChatLogResp\x12\x1f\n" +
	"\x04List\x18\x01 \x03(\v2\v.im.ChatLogR\x04List\"f\n" +
	"\x18SetUpUserConversationReq\x12\x16\n" +
	"\x06SendId\x18\x01 \x01(\tR\x06SendId\x12\x16\n" +
	"\x06recvId\x18\x02 \x01(\tR\x06recvId\x12\x1a\n" +
	"\bchatType\x18\x03 \x01(\x05R\bchatType\"\x1b\n" +
	"\x19SetUpUserConversationResp\"R\n" +
	"\x1aCreateGroupConversationReq\x12\x18\n" +
	"\aGroupId\x18\x01 \x01(\tR\aGroupId\x12\x1a\n" +
	"\bCreateId\x18\x02 \x01(\tR\bCreateId\"\x1d\n" +
	"\x1bCreateGroupConversationResp2\xf9\x02\n" +
	"\x02Im\x123\n" +
	"\n" +
	"GetChatLog\x12\x11.im.GetChatLogReq\x1a\x12.im.GetChatLogResp\x12T\n" +
	"\x15SetUpUserConversation\x12\x1c.im.SetUpUserConversationReq\x1a\x1d.im.SetUpUserConversationResp\x12E\n" +
	"\x10GetConversations\x12\x17.im.GetConversationsReq\x1a\x18.im.GetConversationsResp\x12E\n" +
	"\x10PutConversations\x12\x17.im.PutConversationsReq\x1a\x18.im.PutConversationsResp\x12Z\n" +
	"\x17CreateGroupConversation\x12\x1e.im.CreateGroupConversationReq\x1a\x1f.im.CreateGroupConversationRespB\x06Z\x04./imb\x06proto3"

var (
	file_im_proto_rawDescOnce sync.Once
	file_im_proto_rawDescData []byte
)

func file_im_proto_rawDescGZIP() []byte {
	file_im_proto_rawDescOnce.Do(func() {
		file_im_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_im_proto_rawDesc), len(file_im_proto_rawDesc)))
	})
	return file_im_proto_rawDescData
}

var file_im_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_im_proto_goTypes = []any{
	(*ChatLog)(nil),                     // 0: im.ChatLog
	(*Conversation)(nil),                // 1: im.Conversation
	(*GetConversationsReq)(nil),         // 2: im.GetConversationsReq
	(*GetConversationsResp)(nil),        // 3: im.GetConversationsResp
	(*PutConversationsReq)(nil),         // 4: im.PutConversationsReq
	(*PutConversationsResp)(nil),        // 5: im.PutConversationsResp
	(*GetChatLogReq)(nil),               // 6: im.GetChatLogReq
	(*GetChatLogResp)(nil),              // 7: im.GetChatLogResp
	(*SetUpUserConversationReq)(nil),    // 8: im.SetUpUserConversationReq
	(*SetUpUserConversationResp)(nil),   // 9: im.SetUpUserConversationResp
	(*CreateGroupConversationReq)(nil),  // 10: im.CreateGroupConversationReq
	(*CreateGroupConversationResp)(nil), // 11: im.CreateGroupConversationResp
	nil,                                 // 12: im.GetConversationsResp.ConversationListEntry
	nil,                                 // 13: im.PutConversationsReq.ConversationListEntry
}
var file_im_proto_depIdxs = []int32{
	0,  // 0: im.Conversation.msg:type_name -> im.ChatLog
	12, // 1: im.GetConversationsResp.conversationList:type_name -> im.GetConversationsResp.ConversationListEntry
	13, // 2: im.PutConversationsReq.conversationList:type_name -> im.PutConversationsReq.ConversationListEntry
	0,  // 3: im.GetChatLogResp.List:type_name -> im.ChatLog
	1,  // 4: im.GetConversationsResp.ConversationListEntry.value:type_name -> im.Conversation
	1,  // 5: im.PutConversationsReq.ConversationListEntry.value:type_name -> im.Conversation
	6,  // 6: im.Im.GetChatLog:input_type -> im.GetChatLogReq
	8,  // 7: im.Im.SetUpUserConversation:input_type -> im.SetUpUserConversationReq
	2,  // 8: im.Im.GetConversations:input_type -> im.GetConversationsReq
	4,  // 9: im.Im.PutConversations:input_type -> im.PutConversationsReq
	10, // 10: im.Im.CreateGroupConversation:input_type -> im.CreateGroupConversationReq
	7,  // 11: im.Im.GetChatLog:output_type -> im.GetChatLogResp
	9,  // 12: im.Im.SetUpUserConversation:output_type -> im.SetUpUserConversationResp
	3,  // 13: im.Im.GetConversations:output_type -> im.GetConversationsResp
	5,  // 14: im.Im.PutConversations:output_type -> im.PutConversationsResp
	11, // 15: im.Im.CreateGroupConversation:output_type -> im.CreateGroupConversationResp
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_im_proto_init() }
func file_im_proto_init() {
	if File_im_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_im_proto_rawDesc), len(file_im_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_im_proto_goTypes,
		DependencyIndexes: file_im_proto_depIdxs,
		MessageInfos:      file_im_proto_msgTypes,
	}.Build()
	File_im_proto = out.File
	file_im_proto_goTypes = nil
	file_im_proto_depIdxs = nil
}
